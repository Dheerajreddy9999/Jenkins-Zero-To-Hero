pipeline {
    agent any 

environment {
    DOCKER_IMAGE = "dheerajlearningdocker/ultimate-cicd:${BUILD_NUMBER}"
}

    stages {

        // stage('Checkout') {
        //     steps {
        //         git branch: 'main', url: 'https://github.com/Dheerajreddy9999/Jenkins-Zero-To-Hero'
        //     }
        // }

        stage('Build and Test') {
            agent {
                docker {image 'maven:3.9-eclipse-temurin-11-alpine'}
            }
            steps {
                sh 'cd jenkins-argocd-k8s/spring-boot-app && mvn package'
            }
        }

        // stage('Static Code Anlaysis') {
        //     agent {
        //         docker {image 'maven:3.9-eclipse-temurin-11-alpine'}
        //     }
        //     steps {
        //         withSonarQubeEnv(installationName: 'SONAR5.1',credentialsId: 'sonar-token') {
        //             sh 'mvn sonar:sonar'
        //         }
        //     }
        // }

        stage('Build docker Image') {
            steps {
                sh 'cd jenkins-argocd-k8s/spring-boot-app && docker build -t  ${DOCKER_IMAGE} .'
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                def dockerImage = docker.image("${DOCKER_IMAGE}")
                withDockerRegistry(credentialsId: 'docker-cred', url: 'https://index.docker.io/v1/') {
                    dockerImage.push()
                }
              } 
            }

           post {
            success {
                sh 'docker rmi ${DOCKER_IMAGE}'
            }
           }
        }

        stage('Update Deployment File'){
            environment {
                GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
                GIT_USER_NAME = "Dheerajreddy9999"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                    git config user.email "ksreddy.dheeraj@gmail.com"
                    git config user.name "Dheerajreddy9999"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" jenkins-argocd-k8s/spring-boot-app-manifests/deployment.yaml"
                    git add jenkins-argocd-k8s/spring-boot-app-manifests/deployment.yaml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main

                '''
                }
            }
        }



    }
}