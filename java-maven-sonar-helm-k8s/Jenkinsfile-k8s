pipeline {
    agent {
        kubernetes {
            yaml '''
            apiVersion: v1
            kind: Pod
            metadata:
            spec:
              serviceAccount: jenkins
              containers:
              - name: maven
                image: maven:3.8.6-openjdk-8-slim
                command:
                - cat
                tty: true
              - name: helm-kubectl
                image: dtzar/helm-kubectl:3.12.3
                command:
                - cat
                tty: true
              - name: kaniko
                image: gcr.io/kaniko-project/executor:debug
                command:
                - cat
                tty: true
                volumeMounts:
                - name: kaniko-secret
                  mountPath: /kaniko/.docker
              volumes:
              - name: kaniko-secret
                secret:
                  secretName: regcred
                  items:
                    - key: .dockerconfigjson
                      path: config.json
            '''
        }
    }

    environment {
        dockerRepoName = "dheerajlearningdocker/vprofile-app"
        imageTag = "V${BUILD_NUMBER}"
    }

    stages{


      // stage('Git Checkout') {
      //   steps {
      //     git branch: 'main', url: 'https://github.com/Dheerajreddy9999/Jenkins-complete-e2e-pipeline.git'
      //   }
      // }

      //   stage('UNIT TEST') {
      //    steps {
      //       container ('maven') {
      //           sh 'cd java-maven-sonar-helm-k8s && mvn test'
      //       }
      //    }
      // }


      // stage('INTEGRATION TEST') {
      //    steps {
      //        container ('maven') {
      //            sh 'cd java-maven-sonar-helm-k8s && mvn verify -DskipUnitTests'
      //       }
      //    }      
      // }

      stage ('Build') {
            steps {
                container ('maven') {
                    sh 'cd java-maven-sonar-helm-k8s && mvn clean install -DskipTests'
                }
            }
        }

      stage('CODE ANALYSIS WITH CHECKSTYLE') {
         steps {
            container ('maven') {
                  sh 'cd java-maven-sonar-helm-k8s &&mvn checkstyle:checkstyle'
            }
         }
      }

      stage('CODE ANALYSIS with SONARQUBE') {

            environment {
                scannerHome = tool 'sonar5.0'
            }

            steps {
                withSonarQubeEnv('sonar-scanner') {
                    sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
                   -Dsonar.projectName=vprofile-repo \
                   -Dsonar.projectVersion=1.0 \
                   -Dsonar.sources=java-maven-sonar-helm-k8s/src/ \
                   -Dsonar.java.binaries=java-maven-sonar-helm-k8s/target/test-classes/com/visualpathit/account/controllerTest/ \
                   -Dsonar.junit.reportsPath=java-maven-sonar-helm-k8s/target/surefire-reports/ \
                   -Dsonar.jacoco.reportsPath=java-maven-sonar-helm-k8s/target/jacoco.exec \
                   -Dsonar.java.checkstyle.reportPaths=java-maven-sonar-helm-k8s/target/checkstyle-result.xml
                   '''
                }

                //  timeout(time: 10, unit: 'MINUTES') {
                //     waitForQualityGate abortPipeline: true
                //  }   
           }
      } 

//         stage ('build image') {
//             steps {
//                 container ('kaniko') {
//                     sh "/kaniko/executor --context `pwd` --destination $dockerRepoName:$imageTag "
//                 }
//             }
//         }


//         stage('Deploy to k8') {
//           steps {
//             container ('helm-kubectl') {
//               sh 'helm upgrade --install --force ecommerce helm/vprofilechart  \
//               --set vproapp.image.repository=${dockerRepoName} \
//               --set vproapp.image.tag=${imageTag} \
//               -n prod --create-namespace \
//               -f helm/vprofilechart/dev-values.yaml'
//             }
//           }
//         }

    }
}
